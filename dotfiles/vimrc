" curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
" vim +PlugInstall +qa

" https://github.com/prabirshrestha/vim-lsp
call plug#begin('~/.vim/plugged')
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'cyb70289/Zenburn'
call plug#end()
let g:lsp_diagnostics_enabled = 0
let g:lsp_document_highlight_enabled = 0
let g:lsp_document_code_action_signs_enabled = 0
nmap <buffer> gd <plug>(lsp-definition)
nmap <buffer> -gd :sp<cr>:LspDefinition<cr>
nmap <buffer> \gd :vsp<cr>:LspDefinition<cr>
"nmap <buffer> pd <plug>(lsp-peek-definition)
nmap <buffer> gh <plug>(lsp-hover)
nmap <buffer> gr <plug>(lsp-references)

" https://github.com/prabirshrestha/vim-lsp/wiki
if executable('clangd')
  au User lsp_setup call lsp#register_server({
    \ 'name': 'clangd',
    \ 'cmd': {server_info->['clangd', '-background-index', '-header-insertion=never']},
    \ 'whitelist': ['c', 'cpp'],
    \ })
endif
if executable('gopls')
  au User lsp_setup call lsp#register_server({
    \ 'name': 'gopls',
    \ 'cmd': {server_info->['gopls']},
    \ 'whitelist': ['go'],
    \ })
  let g:lsp_format_sync_timeout = 2000
  autocmd BufWritePre *.go LspDocumentFormatSync
endif
if executable('pyls')
  au User lsp_setup call lsp#register_server({
    \ 'name': 'pyls',
    \ 'cmd': {server_info->['pyls']},
    \ 'whitelist': ['python'],
    \ })
endif

" https://github.com/prabirshrestha/asyncomplete.vim
" tab to pop and select autocompletions, c-v tab to insert a real tab
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? asyncomplete#close_popup() : "\<cr>"
let g:asyncomplete_auto_popup = 0
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction
inoremap <silent><expr> <TAB>
  \ pumvisible() ? "\<C-n>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ asyncomplete#force_refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

set nocompatible
set ruler
set whichwrap=b,s,<,>,[,]
set backspace=indent,eol,start
set shiftwidth=4
set tabstop=4
set expandtab
set wrap
set hlsearch
set ignorecase smartcase
set background=dark

hi Comment ctermfg=blue
syntax enable
filetype indent plugin on

map <F2> :set shiftwidth=4 tabstop=4 expandtab<CR>
map <F3> :set shiftwidth=8 tabstop=8 noexpandtab<CR>
map <F4> :nohlsearch<CR>

autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\""

set t_Co=256
let g:zenburn_disable_Label_underline = 1
colorscheme zenburn

" per file type configuration
autocmd Filetype java setlocal sw=2 ts=2 expandtab
autocmd Filetype cpp setlocal sw=2 ts=2 expandtab
autocmd BufNewFile,BufRead *.make set tabstop=4 shiftwidth=4 noexpandtab
"autocmd BufNewFile,BufRead *.ic set syntax=cpp

" per directory configuration
"autocmd BufNewFile,BufRead /home/linux/work/spdk/* set tabstop=8 shiftwidth=8 noexpandtab

" don't auto insert comment mark
autocmd BufNewFile,BufRead * setlocal formatoptions-=ro

" yank more than 50 lines
set viminfo-=<50,s10
