https://www.percona.com/blog/deep-dive-into-mysqls-performance-schema/


engine status
-------------
show engine innodb status;


list config vars
----------------
show variables;
show variables like '%spin%';
set @innodb_spin_wait_pause_multiplier = 5;


check status
------------
show status;
show status like 'Innodb%';


list tables in current db
-------------------------
use performance_schema;
show tables;
show tables like '%summary%';


show table structure
--------------------
show create table performance_schema.setup_consumers\G
show columns from performance_schema.setup_consumers\G


setup instruments
-----------------
select name, enabled from setup_instruments where name like 'wait/%';
update setup_instruments set enabled='YES', timed='YES' where name like 'wait/%';


setup consumers
---------------
select * from setup_consumers;
update setup_consumers set enabled='YES' where name like '%wait%';


check wait events
-----------------
select thread_id,event_name,source,timer_wait,operation from events_waits_current order by timer_wait;
select thread_id,event_name,source,timer_wait,operation from events_waits_history order by timer_wait;

select event_name,count_star,sum_timer_wait from events_waits_summary_global_by_event_name order by sum_timer_wait,count_star;
select event_name,count_star,sum_timer_wait from events_waits_summary_global_by_event_name where event_name like "%rw%lock%" order by sum_timer_wait,count_star;

select event_name,count_star,sum_timer_wait from events_waits_summary_by_instance order by sum_timer_wait,count_star;


clear events
------------
truncate table events_waits_summary_global_by_event_name;


show thread info per thread_id
------------------------------
select name,thread_os_id from threads where thread_id=40


purge buffer pool
-----------------
https://www.cnblogs.com/geaozhang/p/7225340.html
# page cleaners (4 for oltp)
show global variables like '%page_cleaner%';
# wait due to buffer pool used up and not cleaned in time
show global status like '%buffer%wait_free%';


innodb_flush_log_at_trx_commit
------------------------------
log is opened in bufferd io mode
0:
  * write to mysql log buffer once per trx
  * call os.write/os.fsync to persist mysql log buffer to disk once per second
  * lose trx on mysql crashes, os crashes, power loss
1: 
  * write to mysql log buffer once per trx
  * call os.write/os.fsync to persist mysql log buffer to disk once per trx
2:
  * write to mysql log buffer once per trx
  * call os.write to push mysql log buffer to os page cache once per trx
  * call os.fsync to persist page cache to disk once per second


sync_binlog
-----------
binlog is opened in buffer io mode
0: never call fsync
1: call os.write/os.fsync per trx
n: call os.write per trx, call os.fsync per n trx


innodb_flush_method=O_DIRECT
----------------------------
- opens db data file in direct io mode
- does not influence log and binlog (log and binlog always use buffered io)


double write buffer
-------------------
- for data file writing, not log or binlog
- to prevent partial 16k page writes
- steps:
  1. write to a special area of data file and persist to disk
  2. write to data file and persist to disk
- usage:
  * if step1 is partial, data file is not changed
  * if step2 is partial, data file page cksum is wrong, turn to special area for correct data


dirty read, non-repeatable read, phantom read, isolation levels
---------------------------------------------------------------
https://jennyttt.medium.com/dirty-read-non-repeatable-read-and-phantom-read-bd75dd69d03a
